"""empty message

Revision ID: a7561a269dac
Revises: 0a5db1c03ed0
Create Date: 2024-05-08 12:47:01.771108

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "a7561a269dac"
down_revision: Union[str, None] = "0a5db1c03ed0"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "global_serial_code_usage",
        sa.Column("id", sa.BigInteger().with_variant(sa.INTEGER(), "sqlite"), nullable=False),
        sa.Column("serial_code_id", sa.BigInteger().with_variant(sa.INTEGER(), "sqlite"), nullable=False),
        sa.Column("count", sa.BigInteger().with_variant(sa.INTEGER(), "sqlite"), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("global_serial_code_usage", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_global_serial_code_usage_serial_code_id"), ["serial_code_id"], unique=False
        )

    op.create_table(
        "local_serial_code_usage",
        sa.Column("id", sa.BigInteger().with_variant(sa.INTEGER(), "sqlite"), nullable=False),
        sa.Column("user_id", sa.BigInteger().with_variant(sa.INTEGER(), "sqlite"), nullable=False),
        sa.Column("serial_code_id", sa.BigInteger().with_variant(sa.INTEGER(), "sqlite"), nullable=False),
        sa.Column("count", sa.BigInteger().with_variant(sa.INTEGER(), "sqlite"), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("local_serial_code_usage", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_local_serial_code_usage_serial_code_id"), ["serial_code_id"], unique=False)
        batch_op.create_index(batch_op.f("ix_local_serial_code_usage_user_id"), ["user_id"], unique=False)

    with op.batch_alter_table("incentive", schema=None) as batch_op:
        batch_op.add_column(sa.Column("unit_rarity", sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column("unit_attribute", sa.Integer(), nullable=True))
        batch_op.create_index(batch_op.f("ix_incentive_unit_attribute"), ["unit_attribute"], unique=False)
        batch_op.create_index(batch_op.f("ix_incentive_unit_rarity"), ["unit_rarity"], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("incentive", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_incentive_unit_rarity"))
        batch_op.drop_index(batch_op.f("ix_incentive_unit_attribute"))
        batch_op.drop_column("unit_attribute")
        batch_op.drop_column("unit_rarity")

    with op.batch_alter_table("local_serial_code_usage", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_local_serial_code_usage_user_id"))
        batch_op.drop_index(batch_op.f("ix_local_serial_code_usage_serial_code_id"))

    op.drop_table("local_serial_code_usage")
    with op.batch_alter_table("global_serial_code_usage", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_global_serial_code_usage_serial_code_id"))

    op.drop_table("global_serial_code_usage")
    # ### end Alembic commands ###
