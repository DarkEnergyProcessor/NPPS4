"""empty message

Revision ID: ba4f2c510cae
Revises: 9e93e17cfdc4
Create Date: 2023-10-18 11:55:32.408144

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "ba4f2c510cae"
down_revision: Union[str, None] = "9e93e17cfdc4"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "achievement",
        sa.Column("id", sa.BigInteger().with_variant(sa.INTEGER(), "sqlite"), nullable=False),
        sa.Column("achievement_id", sa.BigInteger().with_variant(sa.INTEGER(), "sqlite"), nullable=False),
        sa.Column("user_id", sa.BigInteger().with_variant(sa.INTEGER(), "sqlite"), nullable=False),
        sa.Column("count", sa.Integer(), nullable=False),
        sa.Column("is_accomplished", sa.Boolean(), nullable=False),
        sa.Column("insert_date", sa.BigInteger().with_variant(sa.INTEGER(), "sqlite"), nullable=False),
        sa.Column("end_date", sa.BigInteger().with_variant(sa.INTEGER(), "sqlite"), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("achievement_id", "user_id"),
    )
    with op.batch_alter_table("achievement", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_achievement_is_accomplished"), ["is_accomplished"], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("achievement", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_achievement_is_accomplished"))

    op.drop_table("achievement")
    # ### end Alembic commands ###
