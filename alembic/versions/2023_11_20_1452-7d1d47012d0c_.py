"""empty message

Revision ID: 7d1d47012d0c
Revises: e4d2df012303
Create Date: 2023-11-20 14:52:21.036036

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "7d1d47012d0c"
down_revision: Union[str, None] = "e4d2df012303"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    award = op.create_table(
        "award",
        sa.Column("id", sa.BigInteger().with_variant(sa.INTEGER(), "sqlite"), nullable=False),
        sa.Column("user_id", sa.BigInteger().with_variant(sa.INTEGER(), "sqlite"), nullable=False),
        sa.Column("award_id", sa.Integer(), nullable=False),
        sa.Column("insert_date", sa.BigInteger().with_variant(sa.INTEGER(), "sqlite"), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("award", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_award_award_id"), ["award_id"], unique=False)
        batch_op.create_index(batch_op.f("ix_award_user_id"), ["user_id"], unique=False)

    DEFAULT_AWARD = (1, 23)
    conn = op.get_bind()
    res = conn.execute(sa.text("select id from user"))
    users: list[int] = list(res.scalars())
    op.bulk_insert(
        award,
        [{"user_id": user_id, "award_id": i, "insert_date": 1365984000} for user_id in users for i in DEFAULT_AWARD],
    )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("award", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_award_user_id"))
        batch_op.drop_index(batch_op.f("ix_award_award_id"))

    op.drop_table("award")
    # ### end Alembic commands ###
