"""live in progress

Revision ID: 076b33982025
Revises: eb7aa83ce83e
Create Date: 2024-03-01 00:08:05.943530

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "076b33982025"
down_revision: Union[str, None] = "eb7aa83ce83e"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "live_in_progress",
        sa.Column("id", sa.BigInteger().with_variant(sa.INTEGER(), "sqlite"), nullable=False),
        sa.Column("user_id", sa.BigInteger().with_variant(sa.INTEGER(), "sqlite"), nullable=False),
        sa.Column("party_user_id", sa.BigInteger().with_variant(sa.INTEGER(), "sqlite"), nullable=False),
        sa.Column("lp_factor", sa.Integer(), nullable=False),
        sa.Column("unit_deck_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["party_user_id"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id"),
    )
    with op.batch_alter_table("live_in_progress", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_live_in_progress_user_id"), ["user_id"], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("live_in_progress", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_live_in_progress_user_id"))

    op.drop_table("live_in_progress")
    # ### end Alembic commands ###
